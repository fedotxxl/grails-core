ext {
    aetherVersion = "1.13.1"
    mavenVersion = "3.0.4"
}

dependencies {
    compile("org.sonatype.aether:aether-api:${aetherVersion}")
    compile("org.sonatype.aether:aether-util:${aetherVersion}")
    compile("org.sonatype.aether:aether-impl:${aetherVersion}")
    compile("org.sonatype.aether:aether-connector-file:${aetherVersion}")
    compile("org.sonatype.aether:aether-connector-wagon:${aetherVersion}") {
//        exclude module:'plexus-component-annotations'
//        exclude module:'plexus-classworlds'
//        exclude module:'plexus-utils'
//        exclude module:'sisu-inject-plexus'
    }
    compile("org.sonatype.aether:aether-connector-asynchttpclient:${aetherVersion}")
    compile("org.apache.maven:maven-aether-provider:$mavenVersion")
    compile "org.apache.maven:maven-settings-builder:$mavenVersion"

    compile project(":grails-bootstrap")

    runtime "org.slf4j:slf4j-simple:$slf4jVersion"
}

install.doLast {
    final aetherConf = new File(rootProject.projectDir, "conf/aether-starter.conf")
    aetherConf.parentFile.mkdirs()

    aetherConf.withPrintWriter { writer ->
        writer.println "load \${grails.home}/dist/grails-aether-${grailsVersion}.jar"
        def appendDependencies = {
            def fileName = it.file.name
            if(! ['jline', 'jansi','jna','hibernate', 'asm', 'cglib', 'groovy-all', 'ant', 'servlet-api'].any { fileName.contains(it) }) {

                def mid = it.moduleVersion.id

                writer.println "load \${grails.home}/lib/${mid.group}/${mid.name}/jars/$fileName"
            }
        }
        configurations.runtime.resolvedConfiguration.resolvedArtifacts.each appendDependencies
    }
}
