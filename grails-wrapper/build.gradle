import org.apache.tools.ant.filters.ReplaceTokens

task copyScript(type: Copy) {
    into "$buildDir/"

    into('scripts') {
        from("../grails-resources/src/grails/home/bash/startGrails") {
            rename 'startGrails', 'grailsw'
        }
        from("../grails-resources/src/grails/home/bash/startGrails.bat") {
            rename 'startGrails.bat', 'grailsw.bat'
        }
        filter(ReplaceTokens, tokens: ['grails.version': grailsVersion])
        filter(ReplaceTokens, tokens: ['starter.main.class': 'org.grails.wrapper.GrailsWrapper'])
        filter(ReplaceTokens, tokens: ['starter.classpath': '@wrapperDir@/grails-wrapper-runtime-@grailsVersion@.jar:@wrapperDir@:.'])
        filter(ReplaceTokens, tokens: ['agent.string': '-javaagent:@wrapperDir@/springloaded-core-@springLoadedVersion@.jar @springLoadedCommonOptions@ -Dspringloaded=\$SPRINGLOADED_PARAMS'])
        filter(ReplaceTokens, tokens: ['startup.command': 'startGrails $STARTER_MAIN_CLASS "$@"'])
        filter(ReplaceTokens, tokens: ['windows.starter.classpath': '@wrapperDir@/grails-wrapper-runtime-@grailsVersion@.jar;@wrapperDir@;.'])
        filter(ReplaceTokens, tokens: ['windows.agent.string': '-javaagent:@wrapperDir@/springloaded-core-@springLoadedVersion@.jar @springLoadedCommonOptions@ -Dspringloaded=\\"%SPRINGLOADED_PARAMS%\\"'.toString()])
        fileMode = 0755
    }

}

task runtimeJar(type: Jar) {
    // TODO
    from('build/classes/main')
    appendix = 'runtime'
}

jar {
  from runtimeJar
  from "${buildDir}/scripts", {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [springLoadedVersion: springLoadedVersion, grailsVersion: grailsVersion, springLoadedCommonOptions: springLoadedCommonOptions]
  }
  // TODO
  exclude 'org/**'
  appendix = 'support'
}

artifacts {
  runtime runtimeJar
}

jar.dependsOn copyScript

